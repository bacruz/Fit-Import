/********************************************************** {{{1 ***********
 *  Copyright © 2015 "Martin Krischik" «krischik@users.sourceforge.net»
 ***************************************************************************
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see http://www.gnu.org/licenses/
 ********************************************************** }}}1 **********/

group = "com.krischik"
version = "1.0.0"
description = "Import KetFit and Withings exports into Google Fit — Android App"

buildscript {
   ext.kotlin_version = '1.0.0-beta-3595'
   repositories {
      mavenCentral ()
      mavenLocal ()
      mavenCentral()
   }
   dependencies {
      classpath (
         [group: 'com.android.tools.build', name: 'gradle', version: '1.2.3'],
         [group: 'com.neenbedankt.gradle.plugins', name: 'android-apt', version: '1.4'],
         [group: 'com.jakewharton.hugo', name: 'hugo-plugin', version: '1.2.1'],
         [group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version]
      ) // classpath
   } // dependencies
} // buildscript

apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'android-apt'
apply plugin: 'kotlin-android'

repositories {
   mavenCentral ()
   mavenLocal ()
   maven {
      url "http://repository.jetbrains.com/all"
   } // maven
   maven {
      url "http://uiq3.sourceforge.net/Repository"
   } // maven
} // repositories


android {
   compileSdkVersion 23
   buildToolsVersion "23.0.1"

   applicationVariants.all { variant ->
      variant.outputs.each { output ->
         def name = output.outputFile.name
            .replace (".apk", "-${variant.versionName}.apk")
            .replace (project.name, "Fit-Import")

         output.outputFile = new File (output.outputFile.parent, name)
      }
   }

   signingConfigs {
      debug {
         storeFile file (System.getenv ("KEY_STORE"))
         storePassword System.getenv ("KEY_STOREPASS")
         keyAlias System.getenv ("KEY_ALIAS")
         keyPassword System.getenv ("KEY_KEYPASS")
      }
      release {
         storeFile file (System.getenv ("KEY_STORE"))
         storePassword System.getenv ("KEY_STOREPASS")
         keyAlias System.getenv ("KEY_ALIAS")
         keyPassword System.getenv ("KEY_KEYPASS")
      }
   }

   defaultConfig {
      applicationId "com.krischik.fit_import"
      testApplicationId 'com.krischik.fit_import.test'
      minSdkVersion 19
      targetSdkVersion 23
      versionCode 10000
      versionName "1.0.0"
      multiDexEnabled true
   }
   buildTypes {
      release {
         signingConfig signingConfigs.release
         minifyEnabled false
         proguardFiles getDefaultProguardFile ('proguard-android.txt'), 'proguard-rules.pro'
      }
      debug {
         signingConfig signingConfigs.debug
      }
   }
   sourceSets {
      main {
         java.srcDirs += 'src/main/kotlin'
      } // main
      androidTest {
         java.srcDirs += 'src/androidTest/kotlin'
      } // androidTest
   } // sourceSets
   compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_7
      targetCompatibility JavaVersion.VERSION_1_7
   } // compileOptions
   productFlavors {
   }
} // android

dependencies {
   apt (
      [group: 'org.androidannotations', name: 'androidannotations', version: androidannotations_version]
   ) // apt
   compile (
      project (':lib'),
      [group: 'com.android.support', name: 'appcompat-v7', version: androidsupport_version],
      [group: 'com.android.support', name: 'support-v4', version: androidsupport_version],
      [group: 'com.android.support', name: 'multidex', version: '1.0.1'],
      [group: 'com.google.android.gms', name: 'play-services', version: '7.5.0'],
      [group: 'org.androidannotations', name: 'androidannotations-api', version: androidannotations_version],
      [group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version],
      [group: 'org.jetbrains.kotlin', name: 'kotlin-runtime', version: kotlin_version]
   ) // compile
   androidTestCompile (
      project (':AndroidTestLib'),
      [group: 'com.jayway.android.robotium', name: 'robotium-solo', version: '5.5.3'],
      [group: 'com.github.rtyley', name: 'android-screenshot-celebrity', version: '1.9']
   ) // androidTestCompile
} // dependencies

apt {
   arguments {
      androidManifestFile variant.outputs [0].processResources.manifestFile
      // if you have multiple outputs (when using splits), you may want to have other index than 0

      resourcePackageName 'com.krischik.fit_import'

      // If you're using Android NBS flavors you should use the following line instead of hard-coded packageName
      // resourcePackageName android.defaultConfig.packageName

      // You can set optional annotation processing options here, like these commented options:
      // logLevel 'INFO'
      // logFile '/var/log/aa.log'
   } // arguments
} // apt

// vim: set nowrap tabstop=8 shiftwidth=3 softtabstop=3 expandtab :
// vim: set textwidth=0 filetype=groovy foldmethod=marker nospell :
